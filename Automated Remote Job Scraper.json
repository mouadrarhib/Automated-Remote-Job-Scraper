{
  "name": "Automated Remote Job Scraper",
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {}
          ]
        }
      },
      "id": "7cc84695-5ac1-417c-a1e7-a639786ab015",
      "name": "Cron Trigger",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [
        -300,
        160
      ]
    },
    {
      "parameters": {
        "url": "https://remotive.com/api/remote-jobs",
        "options": {}
      },
      "id": "d828bb65-c9ec-4d21-9bde-dc75e192c39b",
      "name": "HTTP Request - Remotive",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -20,
        -140
      ]
    },
    {
      "parameters": {
        "jsCode": "// Remotive response structure: { jobs: [...] }\n\nconst keywords = ['developer', 'engineer', 'software', 'backend', 'frontend', 'fullstack', 'devops'];\nconst jobs = items[0]?.json?.jobs || [];\n\nconst filtered = jobs.filter(job => {\n  const title = (job.title || '').toLowerCase();\n  return keywords.some(keyword => title.includes(keyword));\n});\n\nreturn filtered.map(job => ({\n  json: {\n    title: job.title,\n    company: job.company_name,\n    location: job.candidate_required_location,\n    url: job.url,\n    date: job.publication_date\n  }\n}));\n"
      },
      "id": "36ae8c37-aebe-4dbf-ad24-44d0f99c1009",
      "name": "Filter Jobs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        200,
        -40
      ]
    },
    {
      "parameters": {
        "url": "https://remoteok.com/api",
        "options": {}
      },
      "id": "d3805f9c-e06b-4d53-8f21-eca001cf35c9",
      "name": "HTTP Request - RemoteOK",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -20,
        60
      ]
    },
    {
      "parameters": {
        "jsCode": "// RemoteOK response is an array, first element is metadata (skip it)\n\nconst keywords = ['developer', 'engineer', 'software', 'backend', 'frontend', 'fullstack', 'devops'];\nconst jobs = items[0]?.json;\n\nif (!Array.isArray(jobs)) return [];\n\nconst filtered = jobs.slice(1).filter(job => {\n  const title = (job.position || '').toLowerCase();\n  return keywords.some(k => title.includes(k));\n});\n\nreturn filtered.map(job => ({\n  json: {\n    title: job.position,\n    company: job.company,\n    location: job.location || 'Remote',\n    url: job.url,\n    date: job.date\n  }\n}));\n"
      },
      "id": "7940a040-0549-4787-a154-f05390c23b4b",
      "name": "Normalize - RemoteOK",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        200,
        120
      ]
    },
    {
      "parameters": {
        "url": "https://www.arbeitnow.com/api/job-board-api",
        "options": {}
      },
      "id": "9de80276-038c-48d9-bc54-f992d6dd56cc",
      "name": "HTTP Request - Arbeitnow",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -20,
        280
      ]
    },
    {
      "parameters": {
        "jsCode": "// Arbeitnow response: { data: [...] }\n\nconst keywords = ['developer', 'engineer', 'software', 'backend', 'frontend', 'fullstack', 'devops'];\nconst jobs = items[0]?.json?.data || [];\n\nconst filtered = jobs.filter(job => {\n  const title = (job.title || '').toLowerCase();\n  return keywords.some(k => title.includes(k));\n});\n\nreturn filtered.map(job => ({\n  json: {\n    title: job.title,\n    company: job.company,\n    location: job.location || 'Remote',\n    url: job.url,\n    date: job.created_at\n  }\n}));\n"
      },
      "id": "6b01f5dd-7c38-4f3d-b61e-4b2d100a8af0",
      "name": "Normalize - Arbeitnow",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        200,
        280
      ]
    },
    {
      "parameters": {
        "url": "https://api.adzuna.com/v1/api/jobs/us/search/1?app_id=2fc5963c&app_key=0f97ec125058778196038ecae1ea6186&results_per_page=20&what=developer&where=remote&content-type=application/json",
        "options": {}
      },
      "id": "a6474c1c-71b8-42f0-b6b7-f2eb9e3c96c9",
      "name": "HTTP Request - Adzuna",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 1,
      "position": [
        -20,
        500
      ]
    },
    {
      "parameters": {
        "jsCode": "// Adzuna response: { results: [...] }\n\nconst keywords = ['developer', 'engineer', 'software', 'backend', 'frontend', 'fullstack', 'devops'];\nconst jobs = items[0]?.json?.results || [];\n\nconst filtered = jobs.filter(job => {\n  const title = (job.title || '').toLowerCase();\n  return keywords.some(k => title.includes(k));\n});\n\nreturn filtered.map(job => ({\n  json: {\n    title: job.title,\n    company: job.company?.display_name || 'Unknown',\n    location: job.location?.display_name || 'Remote',\n    url: job.redirect_url,\n    date: job.created\n  }\n}));\n"
      },
      "id": "8d76dda5-6746-443d-804a-dcd25643ecf4",
      "name": "Normalize - Adzuna",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        200,
        420
      ]
    },
    {
      "parameters": {
        "authentication": "oAuth2",
        "sheetId": "1aBhYzpaulPAa4u9x_3BNNPmJhqi6FHEUU5RT2iiSbp4",
        "options": {}
      },
      "id": "63bb35b2-3e85-463b-8d86-3a90b6b32dec",
      "name": "Read URLs from Sheet",
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 1,
      "position": [
        740,
        180
      ],
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "emwSUG03G5ui8oz3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Separate input into: jobs from API and saved URLs from Google Sheet\nconst jobs = [];\nconst existingUrls = new Set(); // use Set for better performance\n\nfor (const item of items) {\n  const data = item.json;\n\n  if (data.title && data.url) {\n    // Job object from API\n    jobs.push(data);\n  } else if (data.url) {\n    // Existing URL from Google Sheet\n    existingUrls.add(data.url.trim().toLowerCase());\n  }\n}\n\n// Filter out any job whose URL is already in the sheet\nconst filteredJobs = jobs.filter(job => {\n  const url = job.url?.trim().toLowerCase();\n  return !existingUrls.has(url);\n});\n\n// Return the new (non-duplicate) jobs\nreturn filteredJobs.map(job => ({ json: job }));\n"
      },
      "id": "3948014f-f057-4ca8-bd8d-99573c564493",
      "name": "Filter Existing URLs",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [
        980,
        180
      ]
    },
    {
      "parameters": {
        "unit": "seconds"
      },
      "id": "1c792d6a-6464-46b1-a82c-2c2018fce705",
      "name": "Wait Between Sends",
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1,
      "position": [
        1480,
        160
      ],
      "webhookId": "bd26fd69-1438-41f3-9a32-f08820538626"
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1aBhYzpaulPAa4u9x_3BNNPmJhqi6FHEUU5RT2iiSbp4",
          "mode": "id"
        },
        "sheetName": {
          "__rl": true,
          "value": "0",
          "mode": "id"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "url": "={{ $json.result.entities[0].url }}"
          },
          "matchingColumns": [
            "url"
          ],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "ok",
              "displayName": "ok",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "result",
              "displayName": "result",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        1680,
        160
      ],
      "id": "c96f3b66-c932-40a7-a71e-61ca2b769d81",
      "name": "Append row in sheet1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "emwSUG03G5ui8oz3",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        460,
        180
      ],
      "id": "5e08bb7e-fb52-44eb-9e08-baded8afa296",
      "name": "Merge"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        840,
        -180
      ],
      "id": "230d6fa6-146c-40d0-8c2a-9ba82419e9ee",
      "name": "Merge1"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        1240,
        -280
      ],
      "id": "87e05f11-4696-432f-a80f-5ad420094743",
      "name": "Loop Over Items"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "name": "Replace Me",
      "typeVersion": 1,
      "position": [
        1540,
        -280
      ],
      "id": "be399786-f978-4f7c-a350-5cfe16574887"
    },
    {
      "parameters": {
        "chatId": "YOUR_TELEGRAM_CHAT_ID",
        "text": "=📌 {{$json.title}} 🏢 {{$json.company}} 🌍 {{$json.location}} 📅 {{$json.date}} 🔗 [Apply Here]({{$json.url}})",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        1300,
        160
      ],
      "id": "fb006eb5-f03b-4820-b38a-4da73e572a2f",
      "name": "Send a text message",
      "webhookId": "a25c6a34-be7b-4e7b-9244-62c5aa89573d",
      "credentials": {
        "telegramApi": {
          "id": "09569uEJQALYSIrt",
          "name": "Telegram account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Cron Trigger": {
      "main": [
        [
          {
            "node": "HTTP Request - Remotive",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request - RemoteOK",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request - Arbeitnow",
            "type": "main",
            "index": 0
          },
          {
            "node": "HTTP Request - Adzuna",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Remotive": {
      "main": [
        [
          {
            "node": "Filter Jobs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter Jobs": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - RemoteOK": {
      "main": [
        [
          {
            "node": "Normalize - RemoteOK",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize - RemoteOK": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "HTTP Request - Arbeitnow": {
      "main": [
        [
          {
            "node": "Normalize - Arbeitnow",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request - Adzuna": {
      "main": [
        [
          {
            "node": "Normalize - Adzuna",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Read URLs from Sheet": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Filter Existing URLs": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Wait Between Sends": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Normalize - Arbeitnow": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Normalize - Adzuna": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Read URLs from Sheet",
            "type": "main",
            "index": 0
          },
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Filter Existing URLs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Replace Me",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Replace Me": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "Wait Between Sends",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "69c7c94a-8e64-4d6f-81fd-2d30d2b52d90",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "200ad6319b5228b0fb8cfab6cbd327d6d6b5933a0eed9b63de0acb557b2ea98a"
  },
  "id": "ppchRXL8biTJbjHo",
  "tags": []
}